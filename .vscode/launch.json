{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "node",
      "request": "launch",
      "name": "Generate CDP API",
      "program": "${workspaceFolder}/scripts/generate-cdp-api.js"
    },
    {
      "type": "node",
      "request": "launch",
      "name": "Generate DAP API",
      "program": "${workspaceFolder}/scripts/generate-dap-api.js"
    },
    {
      "name": "Extension",
      "type": "extensionHost",
      "request": "launch",
      "runtimeExecutable": "${execPath}",
      "args": [
        "--enable-proposed-api=msjsdiag.pwa-debugger",
        "--extensionDevelopmentPath=${workspaceFolder}"
      ],
      "outFiles": [
        "${workspaceFolder}/out/**/*.js"
      ],
      "preLaunchTask": "npm: watch",
      "skipFiles": [
        "<node_internals>/**",
        "async_hooks.js",
        "transformedListenerRegistry.ts",
        "loggingDebugSession.ts",
        "debugSession.ts",
        "messages.ts",
        "protocol.ts",
        "decorators.ts",
        "logger.ts",
        "methodsCalledLogger.ts",
        "next_tick.js",
        "inspector_async_hook.js",
        "printObjectDescription.js",
        "lodash.js",
        "listeners.ts"
    ],
      "env": {
        "DEBUG": "true",
        "debugDAP": "console.log",
        "debugConnection": "console.log" }
    },

    {
      "name": "Launch as Debug Server",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/out/adapterLauncher.js"
    },
    {
      "name": "Dogfood",
      "type": "pwa",
      "request": "launch",
      "command": "code-insiders --disable-extensions --extensionDevelopmentPath=${workspaceFolder}/",
      "preLaunchTask": "npm: watch"
    },
		{
			"name": "Run Tests",
			"type": "extensionHost",
			"request": "launch",
			"runtimeExecutable": "${execPath}",
			"args": [
				"--extensionDevelopmentPath=${workspaceFolder}",
				"--extensionTestsPath=${workspaceFolder}/out/test/testRunner"
			],
			"outFiles": ["${workspaceFolder}/out/test/**/*.js"],
			"preLaunchTask": "npm: watch"
    },
		{
			"name": "Reset Results",
			"type": "extensionHost",
			"request": "launch",
			"runtimeExecutable": "${execPath}",
			"args": [
				"--extensionDevelopmentPath=${workspaceFolder}",
				"--extensionTestsPath=${workspaceFolder}/out/test/testRunner"
      ],
      "env": {
        "RESET_RESULTS": "true"
      },
			"outFiles": ["${workspaceFolder}/out/test/**/*.js"],
			"preLaunchTask": "npm: watch"
    }
  ]
}